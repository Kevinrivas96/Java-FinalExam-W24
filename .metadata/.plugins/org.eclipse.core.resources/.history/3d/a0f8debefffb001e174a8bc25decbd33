package kevinrivas_ex01;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

public class productController {

    @FXML
    private TextArea resultsOutput;

    @FXML
    private TextField productName;

    @FXML
    private TextField productID;
    
    @FXML
    private TextField AvgOutput;
    
    @FXML
    private TextField minProdOutput;

    private List<Product> products = new ArrayList<>();
    
    
	private static final String URL = "jdbc:mysql://172.31.22.43:3306/Kevin200555784";
	private static final String USERNAME = "Kevin200555784";
	private static final String PASSWORD = "0plrVLtjN8";

    public void displayAll(ActionEvent actionEvent) {
        resultsOutput.clear();
        for (Product product : products) {
            resultsOutput.appendText(product.toString() + "\n");
        }
    }

    public void search(ActionEvent actionEvent) {
        resultsOutput.clear();
        String searchName = productName.getText();
        String searchId = productID.getText();

        for (Product product : products) {
            if (product.getName().equalsIgnoreCase(searchName) || product.getId().equalsIgnoreCase(searchId)) {
                resultsOutput.appendText(product.toString() + "\n");
            }
        }
    }

    public void clearDataGrid(ActionEvent actionEvent) {
        resultsOutput.clear();
    }

    public void displayAvg(ActionEvent actionEvent) {
        double avg = products.stream().mapToDouble(Product::getPrice).average().orElse(0);
        AvgOutput.setText(String.format("%.2f", avg));
    }

    public void displayMinProduct(ActionEvent actionEvent) {
        Product minProduct = products.stream()
                .min(Comparator.comparingDouble(Product::getPrice))
                .orElse(null);

        if (minProduct != null) {
            minProdOutput.setText(minProduct.toString());
        } else {
            minProdOutput.setText("No products found.");
        }
    }

    private class Product {
        private String id;
        private String name;
        private double price;

        public Product(String id, String name, double price) {
            this.id = id;
            this.name = name;
            this.price = price;
        }

        public String getId() {
            return id;
        }

        public String getName() {
            return name;
        }

        public double getPrice() {
            return price;
        }

        @Override
        public String toString() {
            return "ID: " + id + ", Name: " + name + ", Price: $" + String.format("%.2f", price);
        }
    }
}
